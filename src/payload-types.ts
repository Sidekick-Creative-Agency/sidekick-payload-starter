/* tslint:disable */
/* eslint-disable */
/**
 * This file was automatically generated by Payload.
 * DO NOT MODIFY IT BY HAND. Instead, modify your source Payload config,
 * and re-run `payload generate:types` to regenerate this file.
 */

/**
 * Supported timezones in IANA format.
 *
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "supportedTimezones".
 */
export type SupportedTimezones =
  | 'Pacific/Midway'
  | 'Pacific/Niue'
  | 'Pacific/Honolulu'
  | 'Pacific/Rarotonga'
  | 'America/Anchorage'
  | 'Pacific/Gambier'
  | 'America/Los_Angeles'
  | 'America/Tijuana'
  | 'America/Denver'
  | 'America/Phoenix'
  | 'America/Chicago'
  | 'America/Guatemala'
  | 'America/New_York'
  | 'America/Bogota'
  | 'America/Caracas'
  | 'America/Santiago'
  | 'America/Buenos_Aires'
  | 'America/Sao_Paulo'
  | 'Atlantic/South_Georgia'
  | 'Atlantic/Azores'
  | 'Atlantic/Cape_Verde'
  | 'Europe/London'
  | 'Europe/Berlin'
  | 'Africa/Lagos'
  | 'Europe/Athens'
  | 'Africa/Cairo'
  | 'Europe/Moscow'
  | 'Asia/Riyadh'
  | 'Asia/Dubai'
  | 'Asia/Baku'
  | 'Asia/Karachi'
  | 'Asia/Tashkent'
  | 'Asia/Calcutta'
  | 'Asia/Dhaka'
  | 'Asia/Almaty'
  | 'Asia/Jakarta'
  | 'Asia/Bangkok'
  | 'Asia/Shanghai'
  | 'Asia/Singapore'
  | 'Asia/Tokyo'
  | 'Asia/Seoul'
  | 'Australia/Brisbane'
  | 'Australia/Sydney'
  | 'Pacific/Guam'
  | 'Pacific/Noumea'
  | 'Pacific/Auckland'
  | 'Pacific/Fiji';

export interface Config {
  auth: {
    users: UserAuthOperations;
  };
  blocks: {};
  collections: {
    pages: Page;
    posts: Post;
    media: Media;
    categories: Category;
    users: User;
    listings: Listing;
    attachments: Attachment;
    'property-types': PropertyType;
    reviews: Review;
    'team-members': TeamMember;
    'job-listings': JobListing;
    redirects: Redirect;
    forms: Form;
    'form-submissions': FormSubmission;
    search: Search;
    'payload-locked-documents': PayloadLockedDocument;
    'payload-preferences': PayloadPreference;
    'payload-migrations': PayloadMigration;
  };
  collectionsJoins: {
    media: {
      relatedListingFeaturedImage: 'listings';
      relatedListingImageGallery: 'listings';
    };
    attachments: {
      relatedListings: 'listings';
    };
    'property-types': {
      relatedListings: 'listings';
    };
    'team-members': {
      relatedListings: 'listings';
    };
  };
  collectionsSelect: {
    pages: PagesSelect<false> | PagesSelect<true>;
    posts: PostsSelect<false> | PostsSelect<true>;
    media: MediaSelect<false> | MediaSelect<true>;
    categories: CategoriesSelect<false> | CategoriesSelect<true>;
    users: UsersSelect<false> | UsersSelect<true>;
    listings: ListingsSelect<false> | ListingsSelect<true>;
    attachments: AttachmentsSelect<false> | AttachmentsSelect<true>;
    'property-types': PropertyTypesSelect<false> | PropertyTypesSelect<true>;
    reviews: ReviewsSelect<false> | ReviewsSelect<true>;
    'team-members': TeamMembersSelect<false> | TeamMembersSelect<true>;
    'job-listings': JobListingsSelect<false> | JobListingsSelect<true>;
    redirects: RedirectsSelect<false> | RedirectsSelect<true>;
    forms: FormsSelect<false> | FormsSelect<true>;
    'form-submissions': FormSubmissionsSelect<false> | FormSubmissionsSelect<true>;
    search: SearchSelect<false> | SearchSelect<true>;
    'payload-locked-documents': PayloadLockedDocumentsSelect<false> | PayloadLockedDocumentsSelect<true>;
    'payload-preferences': PayloadPreferencesSelect<false> | PayloadPreferencesSelect<true>;
    'payload-migrations': PayloadMigrationsSelect<false> | PayloadMigrationsSelect<true>;
  };
  db: {
    defaultIDType: number;
  };
  globals: {
    header: Header;
    footer: Footer;
    'cookie-banner': CookieBanner;
  };
  globalsSelect: {
    header: HeaderSelect<false> | HeaderSelect<true>;
    footer: FooterSelect<false> | FooterSelect<true>;
    'cookie-banner': CookieBannerSelect<false> | CookieBannerSelect<true>;
  };
  locale: null;
  user: User & {
    collection: 'users';
  };
  jobs: {
    tasks: unknown;
    workflows: unknown;
  };
}
export interface UserAuthOperations {
  forgotPassword: {
    email: string;
    password: string;
  };
  login: {
    email: string;
    password: string;
  };
  registerFirstUser: {
    email: string;
    password: string;
  };
  unlock: {
    email: string;
    password: string;
  };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "pages".
 */
export interface Page {
  id: number;
  title: string;
  hero: {
    type: 'none' | 'highImpact' | 'mediumImpact' | 'lowImpact' | 'home';
    enableOverrideTitle?: boolean | null;
    overrideTitle?: string | null;
    subtitle?: string | null;
    enableLinks?: boolean | null;
    links?:
      | {
          link: {
            type?: ('reference' | 'custom') | null;
            newTab?: boolean | null;
            reference?: {
              relationTo: 'pages';
              value: number | Page;
            } | null;
            url?: string | null;
            label: string;
            /**
             * Choose how the link should be rendered.
             */
            appearance?: ('default' | 'outline') | null;
            backgroundColor?: string | null;
            borderColor?: string | null;
            textColor?: string | null;
          };
          id?: string | null;
        }[]
      | null;
    media?: (number | null) | Media;
    heroLogos?:
      | {
          logo?: (number | null) | Media;
          id?: string | null;
        }[]
      | null;
    homeHeroLinks?:
      | {
          beforeLabelText?: string | null;
          link: {
            type?: ('reference' | 'custom') | null;
            newTab?: boolean | null;
            reference?: {
              relationTo: 'pages';
              value: number | Page;
            } | null;
            url?: string | null;
            label: string;
            /**
             * Choose how the link should be rendered.
             */
            appearance?: ('default' | 'outline') | null;
            backgroundColor?: string | null;
            borderColor?: string | null;
            textColor?: string | null;
          };
          id?: string | null;
        }[]
      | null;
  };
  layout: (
    | ArchiveBlock
    | FormBlock
    | ColumnsBlock
    | FAQBlock
    | NumberCountersBlock
    | ExpertiseBlock
    | TimelineBlock
    | ReviewsBlock
    | JobListingsBlock
    | SocialProofCarouselBlock
    | MediaCarouselBlock
    | CardGridBlock
    | FeaturedListingsBlock
    | SearchBarBlock
  )[];
  meta?: {
    title?: string | null;
    /**
     * Maximum upload file size: 12MB. Recommended file size for images is <500KB.
     */
    image?: (number | null) | Media;
    description?: string | null;
  };
  publishedAt?: string | null;
  url?: string | null;
  slug?: string | null;
  slugLock?: boolean | null;
  parent?: (number | null) | Page;
  breadcrumbs?:
    | {
        doc?: (number | null) | Page;
        url?: string | null;
        label?: string | null;
        id?: string | null;
      }[]
    | null;
  updatedAt: string;
  createdAt: string;
  _status?: ('draft' | 'published') | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "media".
 */
export interface Media {
  id: number;
  alt?: string | null;
  relatedListingFeaturedImage?: {
    docs?: (number | Listing)[];
    hasNextPage?: boolean;
    totalDocs?: number;
  };
  relatedListingImageGallery?: {
    docs?: (number | Listing)[];
    hasNextPage?: boolean;
    totalDocs?: number;
  };
  blurhash?: string | null;
  prefix?: string | null;
  updatedAt: string;
  createdAt: string;
  url?: string | null;
  thumbnailURL?: string | null;
  filename?: string | null;
  mimeType?: string | null;
  filesize?: number | null;
  width?: number | null;
  height?: number | null;
  focalX?: number | null;
  focalY?: number | null;
  sizes?: {
    thumbnail?: {
      url?: string | null;
      width?: number | null;
      height?: number | null;
      mimeType?: string | null;
      filesize?: number | null;
      filename?: string | null;
    };
    square?: {
      url?: string | null;
      width?: number | null;
      height?: number | null;
      mimeType?: string | null;
      filesize?: number | null;
      filename?: string | null;
    };
    medium?: {
      url?: string | null;
      width?: number | null;
      height?: number | null;
      mimeType?: string | null;
      filesize?: number | null;
      filename?: string | null;
    };
    xlarge?: {
      url?: string | null;
      width?: number | null;
      height?: number | null;
      mimeType?: string | null;
      filesize?: number | null;
      filename?: string | null;
    };
  };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "listings".
 */
export interface Listing {
  id: number;
  title: string;
  featuredImage: number | Media;
  imageGallery?:
    | {
        image?: (number | null) | Media;
        id?: string | null;
      }[]
    | null;
  /**
   * Image displayed in the contact form section of the listing page
   */
  contactFormImage?: (number | null) | Media;
  photosChangeTimestamp?: string | null;
  majorChangeTimestamp?: string | null;
  priceChangeTimestamp?: string | null;
  statusChangeTimestamp?: string | null;
  videosChangeTimestamp?: string | null;
  contractStatusChangeTimestamp?: string | null;
  documentsChangeTimestamp?: string | null;
  category?: ('commercial' | 'residential') | null;
  bedrooms?: number | null;
  bathrooms?: number | null;
  description?: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  price?: number | null;
  textAfterPrice?: string | null;
  propertyType?: (number | PropertyType)[] | null;
  transactionType?: ('for-sale' | 'for-lease') | null;
  availability?: ('available' | 'unavailable' | 'sold' | 'active' | 'pending') | null;
  /**
   * Square footage of the property
   */
  area?: number | null;
  acreage?: number | null;
  streetAddress: string;
  city: string;
  state: string;
  zipCode: string;
  /**
   * @minItems 2
   * @maxItems 2
   */
  coordinates: [number, number];
  attachments?:
    | {
        attachment?: (number | null) | Attachment;
        id?: string | null;
      }[]
    | null;
  videos?:
    | {
        url: string;
        title?: string | null;
        id?: string | null;
      }[]
    | null;
  isFeatured?: boolean | null;
  agents?: (number | TeamMember)[] | null;
  meta?: {
    title?: string | null;
    /**
     * Maximum upload file size: 12MB. Recommended file size for images is <500KB.
     */
    image?: (number | null) | Media;
    description?: string | null;
  };
  publishedAt?: string | null;
  slug?: string | null;
  slugLock?: boolean | null;
  /**
   * This is used for Residential listings imported from NTREIS
   */
  MLS?: {
    ListingKeyNumeric?: number | null;
    MlsStatus?: string | null;
    ListAgentKeyNumeric?: number | null;
    ListAgentFullName?: string | null;
    ListOfficeKeyNumeric?: number | null;
    ListOfficeName?: string | null;
    ModificationTimestamp?: string | null;
    PhotosChangeTimestamp?: string | null;
    PhotosCount?: number | null;
    PropertySubType?: string | null;
    FeaturedImageUrl?: string | null;
    ImageGalleryUrls?:
      | {
          url?: string | null;
          id?: string | null;
        }[]
      | null;
  };
  updatedAt: string;
  createdAt: string;
  _status?: ('draft' | 'published') | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "property-types".
 */
export interface PropertyType {
  id: number;
  title: string;
  relatedListings?: {
    docs?: (number | Listing)[];
    hasNextPage?: boolean;
    totalDocs?: number;
  };
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "attachments".
 */
export interface Attachment {
  id: number;
  title?: string | null;
  relatedListings?: {
    docs?: (number | Listing)[];
    hasNextPage?: boolean;
    totalDocs?: number;
  };
  prefix?: string | null;
  updatedAt: string;
  createdAt: string;
  url?: string | null;
  thumbnailURL?: string | null;
  filename?: string | null;
  mimeType?: string | null;
  filesize?: number | null;
  width?: number | null;
  height?: number | null;
  focalX?: number | null;
  focalY?: number | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "team-members".
 */
export interface TeamMember {
  id: number;
  title: string;
  lastName?: string | null;
  details: {
    jobTitle: string;
    bio?: {
      root: {
        type: string;
        children: {
          type: string;
          version: number;
          [k: string]: unknown;
        }[];
        direction: ('ltr' | 'rtl') | null;
        format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
        indent: number;
        version: number;
      };
      [k: string]: unknown;
    } | null;
    featuredImage: number | Media;
    designations?: string | null;
    email?: string | null;
    phone?: string | null;
    socials?:
      | {
          platform?: ('facebook' | 'instagram' | 'linkedin' | 'twitter' | 'youtube') | null;
          url?: string | null;
          id?: string | null;
        }[]
      | null;
    eductationAndCertifications?: {
      root: {
        type: string;
        children: {
          type: string;
          version: number;
          [k: string]: unknown;
        }[];
        direction: ('ltr' | 'rtl') | null;
        format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
        indent: number;
        version: number;
      };
      [k: string]: unknown;
    } | null;
    notableTransactions?: {
      root: {
        type: string;
        children: {
          type: string;
          version: number;
          [k: string]: unknown;
        }[];
        direction: ('ltr' | 'rtl') | null;
        format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
        indent: number;
        version: number;
      };
      [k: string]: unknown;
    } | null;
    testimonials?:
      | {
          name: string;
          testimonial: string;
          rating: number;
          image: number | Media;
          id?: string | null;
        }[]
      | null;
    isLeadership?: boolean | null;
    isRealtor?: boolean | null;
    company?: ('onward' | 'alliance') | null;
    emailSignatureHeadshot?: (number | null) | Media;
  };
  meta?: {
    title?: string | null;
    /**
     * Maximum upload file size: 12MB. Recommended file size for images is <500KB.
     */
    image?: (number | null) | Media;
    description?: string | null;
  };
  relatedListings?: {
    docs?: (number | Listing)[];
    hasNextPage?: boolean;
    totalDocs?: number;
  };
  slug?: string | null;
  slugLock?: boolean | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "ArchiveBlock".
 */
export interface ArchiveBlock {
  heading?: string | null;
  subtitle?: string | null;
  headingAlign?: ('center' | 'left' | 'right') | null;
  relationTo?: ('posts' | 'team-members' | 'listings') | null;
  selectionType?: ('manual' | 'categories') | null;
  manualSelection?: (number | Post)[] | null;
  enableCategoryBanner?: boolean | null;
  categories?: (number | Category)[] | null;
  propertyTypes?: (number | PropertyType)[] | null;
  limit?: number | null;
  enablePropertyCategoryFilters?: boolean | null;
  defaultCategoryFilter?: ('commercial' | 'residential') | null;
  layout?: ('grid' | 'carousel') | null;
  buttonColor?: string | null;
  enablePostCategoryFilter?: boolean | null;
  enableExcerpt?: boolean | null;
  enableDate?: boolean | null;
  /**
   * Adds padding on the sides of the Post Card text
   */
  enableGutter?: boolean | null;
  /**
   * The HTML ID attribute of this block.
   */
  elementId?: string | null;
  /**
   * Omit the opening and closing <style> tags
   */
  customCss?: string | null;
  id?: string | null;
  blockName?: string | null;
  blockType: 'archiveBlock';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "posts".
 */
export interface Post {
  id: number;
  title: string;
  content: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  };
  featuredImage?: (number | null) | Media;
  excerpt?: string | null;
  category?: (number | null) | Category;
  meta?: {
    title?: string | null;
    /**
     * Maximum upload file size: 12MB. Recommended file size for images is <500KB.
     */
    image?: (number | null) | Media;
    description?: string | null;
  };
  publishedAt?: string | null;
  authors?: (number | User)[] | null;
  populatedAuthors?:
    | {
        id?: string | null;
        name?: string | null;
      }[]
    | null;
  slug?: string | null;
  slugLock?: boolean | null;
  updatedAt: string;
  createdAt: string;
  _status?: ('draft' | 'published') | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "categories".
 */
export interface Category {
  id: number;
  title: string;
  parent?: (number | null) | Category;
  breadcrumbs?:
    | {
        doc?: (number | null) | Category;
        url?: string | null;
        label?: string | null;
        id?: string | null;
      }[]
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "users".
 */
export interface User {
  id: number;
  name?: string | null;
  updatedAt: string;
  createdAt: string;
  email: string;
  resetPasswordToken?: string | null;
  resetPasswordExpiration?: string | null;
  salt?: string | null;
  hash?: string | null;
  loginAttempts?: number | null;
  lockUntil?: string | null;
  password?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "FormBlock".
 */
export interface FormBlock {
  form: number | Form;
  enableIntro?: boolean | null;
  introContent?: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  styles?: {
    global?: {
      width?: ('full' | 'boxed' | 'narrow') | null;
      theme?: ('default' | 'thin') | null;
    };
    resp?: {
      padHorDeskVal?: number | null;
      padHorDeskUnit?: ('rem' | 'px' | '%') | null;
      padVertDeskVal?: number | null;
      padVertDeskUnit?: ('rem' | 'px' | '%') | null;
      padHorTabVal?: number | null;
      padHorTabUnit?: ('rem' | 'px' | '%') | null;
      padVertTabVal?: number | null;
      padVertTabUnit?: ('rem' | 'px' | '%') | null;
      padHorMbVal?: number | null;
      padHorMbUnit?: ('rem' | 'px' | '%') | null;
      padVertMbVal?: number | null;
      padVertMbUnit?: ('rem' | 'px' | '%') | null;
    };
  };
  /**
   * The HTML ID attribute of this block.
   */
  elementId?: string | null;
  /**
   * Omit the opening and closing <style> tags
   */
  customCss?: string | null;
  id?: string | null;
  blockName?: string | null;
  blockType: 'formBlock';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "forms".
 */
export interface Form {
  id: number;
  title: string;
  fields?:
    | (
        | {
            name: string;
            label?: string | null;
            width?: ('oneThird' | 'half' | 'twoThirds' | 'full') | null;
            defaultValue?: boolean | null;
            required?: boolean | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'checkbox';
          }
        | {
            name: string;
            label?: string | null;
            placeholder?: string | null;
            width?: ('oneThird' | 'half' | 'twoThirds' | 'full') | null;
            required?: boolean | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'country';
          }
        | {
            name: string;
            label?: string | null;
            width?: ('oneThird' | 'half' | 'twoThirds' | 'full') | null;
            placeholder?: string | null;
            required?: boolean | null;
            /**
             * If checked, the field will not be displayed in the form.
             */
            hidden?: boolean | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'email';
          }
        | {
            message?: {
              root: {
                type: string;
                children: {
                  type: string;
                  version: number;
                  [k: string]: unknown;
                }[];
                direction: ('ltr' | 'rtl') | null;
                format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
                indent: number;
                version: number;
              };
              [k: string]: unknown;
            } | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'message';
          }
        | {
            name: string;
            label?: string | null;
            width?: ('oneThird' | 'half' | 'twoThirds' | 'full') | null;
            defaultValue?: string | null;
            required?: boolean | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'number';
          }
        | {
            name: string;
            label?: string | null;
            width?: number | null;
            defaultValue?: string | null;
            placeholder?: string | null;
            options?:
              | {
                  label: string;
                  value: string;
                  id?: string | null;
                }[]
              | null;
            required?: boolean | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'select';
          }
        | {
            name: string;
            label?: string | null;
            placeholder?: string | null;
            width?: ('oneThird' | 'half' | 'twoThirds' | 'full') | null;
            required?: boolean | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'state';
          }
        | {
            name: string;
            label?: string | null;
            width?: ('oneThird' | 'half' | 'twoThirds' | 'full') | null;
            defaultValue?: string | null;
            placeholder?: string | null;
            required?: boolean | null;
            /**
             * If checked, the field will not be displayed on the frontend.
             */
            hidden?: boolean | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'text';
          }
        | {
            name: string;
            label?: string | null;
            width?: ('oneThird' | 'half' | 'twoThirds' | 'full') | null;
            defaultValue?: string | null;
            placeholder?: string | null;
            required?: boolean | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'textarea';
          }
        | {
            name?: string | null;
            label?: string | null;
            width?: ('oneThird' | 'half' | 'twoThirds' | 'full') | null;
            defaultValue?: string | null;
            placeholder?: string | null;
            required?: boolean | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'phoneNumber';
          }
        | {
            name?: string | null;
            title?: string | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'pageTitle';
          }
        | {
            name?: string | null;
            title?: string | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'teamMemberEmail';
          }
      )[]
    | null;
  submitButtonLabel?: string | null;
  /**
   * Choose whether to display an on-page message or redirect to a different page after they submit the form.
   */
  confirmationType?: ('message' | 'redirect') | null;
  confirmationMessage?: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  redirect?: {
    url: string;
  };
  /**
   * Send custom emails when the form submits. Use comma separated lists to send the same email to multiple recipients. To reference a value from this form, wrap that field's name with double curly brackets, i.e. {{firstName}}. You can use a wildcard {{*}} to output all data and {{*:table}} to format it as an HTML table in the email.
   */
  emails?:
    | {
        emailTo?: string | null;
        cc?: string | null;
        bcc?: string | null;
        replyTo?: string | null;
        emailFrom?: string | null;
        subject: string;
        /**
         * Enter the message that should be sent in this email.
         */
        message?: {
          root: {
            type: string;
            children: {
              type: string;
              version: number;
              [k: string]: unknown;
            }[];
            direction: ('ltr' | 'rtl') | null;
            format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
            indent: number;
            version: number;
          };
          [k: string]: unknown;
        } | null;
        id?: string | null;
      }[]
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "ColumnsBlock".
 */
export interface ColumnsBlock {
  columns?:
    | {
        type?: ('text' | 'media') | null;
        size?: ('oneThird' | 'half' | 'twoThirds' | 'full') | null;
        backgroundColor?: string | null;
        backgroundImage?: (number | null) | Media;
        enableSubtitle?: boolean | null;
        subtitle?: string | null;
        subtitleAlign?: ('left' | 'center' | 'right') | null;
        subtitleColor?: string | null;
        richText?: {
          root: {
            type: string;
            children: {
              type: string;
              version: number;
              [k: string]: unknown;
            }[];
            direction: ('ltr' | 'rtl') | null;
            format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
            indent: number;
            version: number;
          };
          [k: string]: unknown;
        } | null;
        enableLinks?: boolean | null;
        links?:
          | {
              link: {
                type?: ('reference' | 'custom') | null;
                newTab?: boolean | null;
                reference?: {
                  relationTo: 'pages';
                  value: number | Page;
                } | null;
                url?: string | null;
                label: string;
                /**
                 * Choose how the link should be rendered.
                 */
                appearance?: ('default' | 'outline') | null;
                backgroundColor?: string | null;
                borderColor?: string | null;
                textColor?: string | null;
              };
              id?: string | null;
            }[]
          | null;
        media?: (number | null) | Media;
        mediaBorderRadius?: ('none' | 'small' | 'medium' | 'large' | 'xl' | 'xxl' | 'full') | null;
        styles?: {
          enableTopBorder?: boolean | null;
          borderColor?: string | null;
        };
        id?: string | null;
      }[]
    | null;
  styles?: {
    global?: {
      width?: ('full' | 'boxed') | null;
      backgroundColor?: string | null;
      enableDivider?: boolean | null;
      dividerColor?: string | null;
    };
    resp?: {
      reverseWrap?: boolean | null;
    };
  };
  /**
   * The HTML ID attribute of this block.
   */
  elementId?: string | null;
  /**
   * Omit the opening and closing <style> tags
   */
  customCss?: string | null;
  id?: string | null;
  blockName?: string | null;
  blockType: 'columnsBlock';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "FAQBlock".
 */
export interface FAQBlock {
  enableHeading?: boolean | null;
  heading?: string | null;
  faqs?:
    | {
        question?: string | null;
        content?: {
          root: {
            type: string;
            children: {
              type: string;
              version: number;
              [k: string]: unknown;
            }[];
            direction: ('ltr' | 'rtl') | null;
            format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
            indent: number;
            version: number;
          };
          [k: string]: unknown;
        } | null;
        id?: string | null;
      }[]
    | null;
  size?: ('sm' | 'md' | 'lg' | 'full') | null;
  /**
   * The HTML ID attribute of this block.
   */
  elementId?: string | null;
  /**
   * Omit the opening and closing <style> tags
   */
  customCss?: string | null;
  id?: string | null;
  blockName?: string | null;
  blockType: 'faqBlock';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "NumberCountersBlock".
 */
export interface NumberCountersBlock {
  numberCounters?:
    | {
        prefix?: string | null;
        number: number;
        label: string;
        suffix?: string | null;
        id?: string | null;
      }[]
    | null;
  /**
   * The HTML ID attribute of this block.
   */
  elementId?: string | null;
  /**
   * Omit the opening and closing <style> tags
   */
  customCss?: string | null;
  id?: string | null;
  blockName?: string | null;
  blockType: 'numberCountersBlock';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "ExpertiseBlock".
 */
export interface ExpertiseBlock {
  heading?: string | null;
  description?: string | null;
  expertiseAreas?:
    | {
        title?: string | null;
        image?: (number | null) | Media;
        borderColor?: string | null;
        link: {
          type?: ('reference' | 'custom') | null;
          newTab?: boolean | null;
          reference?: {
            relationTo: 'pages';
            value: number | Page;
          } | null;
          url?: string | null;
          label: string;
          /**
           * Choose how the link should be rendered.
           */
          appearance?: ('default' | 'outline') | null;
          backgroundColor?: string | null;
          borderColor?: string | null;
          textColor?: string | null;
        };
        id?: string | null;
      }[]
    | null;
  /**
   * The HTML ID attribute of this block.
   */
  elementId?: string | null;
  /**
   * Omit the opening and closing <style> tags
   */
  customCss?: string | null;
  id?: string | null;
  blockName?: string | null;
  blockType: 'expertiseBlock';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "TimelineBlock".
 */
export interface TimelineBlock {
  heading?: string | null;
  timelineItems?:
    | {
        tab: {
          icon?: (number | null) | Media;
          title: string;
        };
        content?: {
          image?: (number | null) | Media;
          richText?: {
            root: {
              type: string;
              children: {
                type: string;
                version: number;
                [k: string]: unknown;
              }[];
              direction: ('ltr' | 'rtl') | null;
              format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
              indent: number;
              version: number;
            };
            [k: string]: unknown;
          } | null;
        };
        id?: string | null;
      }[]
    | null;
  /**
   * The HTML ID attribute of this block.
   */
  elementId?: string | null;
  /**
   * Omit the opening and closing <style> tags
   */
  customCss?: string | null;
  id?: string | null;
  blockName?: string | null;
  blockType: 'timelineBlock';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "ReviewsBlock".
 */
export interface ReviewsBlock {
  heading?: string | null;
  subtitle?: string | null;
  reviews?:
    | {
        reviewerName: string;
        reviewerTitle: string;
        image: number | Media;
        review: string;
        id?: string | null;
      }[]
    | null;
  /**
   * The HTML ID attribute of this block.
   */
  elementId?: string | null;
  /**
   * Omit the opening and closing <style> tags
   */
  customCss?: string | null;
  id?: string | null;
  blockName?: string | null;
  blockType: 'reviewsBlock';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "JobListingsBlock".
 */
export interface JobListingsBlock {
  heading?: string | null;
  subtitle?: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  /**
   * The HTML ID attribute of this block.
   */
  elementId?: string | null;
  /**
   * Omit the opening and closing <style> tags
   */
  customCss?: string | null;
  id?: string | null;
  blockName?: string | null;
  blockType: 'jobListingsBlock';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "SocialProofCarouselBlock".
 */
export interface SocialProofCarouselBlock {
  heading?: string | null;
  subtitle?: string | null;
  logos?:
    | {
        logo: number | Media;
        id?: string | null;
      }[]
    | null;
  /**
   * The HTML ID attribute of this block.
   */
  elementId?: string | null;
  /**
   * Omit the opening and closing <style> tags
   */
  customCss?: string | null;
  id?: string | null;
  blockName?: string | null;
  blockType: 'socialProofCarouselBlock';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "MediaCarouselBlock".
 */
export interface MediaCarouselBlock {
  enableAutoPlay?: boolean | null;
  carouselItems?:
    | {
        image?: (number | null) | Media;
        id?: string | null;
      }[]
    | null;
  /**
   * The HTML ID attribute of this block.
   */
  elementId?: string | null;
  /**
   * Omit the opening and closing <style> tags
   */
  customCss?: string | null;
  id?: string | null;
  blockName?: string | null;
  blockType: 'mediaCarouselBlock';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "CardGridBlock".
 */
export interface CardGridBlock {
  heading?: string | null;
  subtitle?: string | null;
  headingAlign?: ('center' | 'left' | 'right') | null;
  cards?:
    | {
        icon?: (number | null) | Media;
        content?: {
          root: {
            type: string;
            children: {
              type: string;
              version: number;
              [k: string]: unknown;
            }[];
            direction: ('ltr' | 'rtl') | null;
            format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
            indent: number;
            version: number;
          };
          [k: string]: unknown;
        } | null;
        id?: string | null;
      }[]
    | null;
  styles?: {
    global?: {
      backgroundColor?: string | null;
    };
    resp?: {};
  };
  /**
   * The HTML ID attribute of this block.
   */
  elementId?: string | null;
  /**
   * Omit the opening and closing <style> tags
   */
  customCss?: string | null;
  id?: string | null;
  blockName?: string | null;
  blockType: 'cardGridBlock';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "FeaturedListingsBlock".
 */
export interface FeaturedListingsBlock {
  heading?: string | null;
  subtitle?: string | null;
  headingAlign?: ('center' | 'left' | 'right') | null;
  categoryFilter?: ('all' | 'commercial' | 'residential') | null;
  enableLink?: boolean | null;
  link?: {
    type?: ('reference' | 'custom') | null;
    newTab?: boolean | null;
    reference?: {
      relationTo: 'pages';
      value: number | Page;
    } | null;
    url?: string | null;
    label: string;
  };
  /**
   * The HTML ID attribute of this block.
   */
  elementId?: string | null;
  /**
   * Omit the opening and closing <style> tags
   */
  customCss?: string | null;
  id?: string | null;
  blockName?: string | null;
  blockType: 'featuredListingsBlock';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "SearchBarBlock".
 */
export interface SearchBarBlock {
  category?: ('commercial' | 'residential') | null;
  /**
   * The HTML ID attribute of this block.
   */
  elementId?: string | null;
  /**
   * Omit the opening and closing <style> tags
   */
  customCss?: string | null;
  id?: string | null;
  blockName?: string | null;
  blockType: 'searchBarBlock';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "reviews".
 */
export interface Review {
  id: number;
  name: string;
  jobTitle: string;
  review: string;
  image: number | Media;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "job-listings".
 */
export interface JobListing {
  id: number;
  title: string;
  description: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  };
  updatedAt: string;
  createdAt: string;
  _status?: ('draft' | 'published') | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "redirects".
 */
export interface Redirect {
  id: number;
  /**
   * You will need to rebuild the website when changing this field.
   */
  from: string;
  to?: {
    type?: ('reference' | 'custom') | null;
    reference?:
      | ({
          relationTo: 'pages';
          value: number | Page;
        } | null)
      | ({
          relationTo: 'posts';
          value: number | Post;
        } | null)
      | ({
          relationTo: 'listings';
          value: number | Listing;
        } | null);
    url?: string | null;
  };
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "form-submissions".
 */
export interface FormSubmission {
  id: number;
  form: number | Form;
  submissionData?:
    | {
        field: string;
        value: string;
        id?: string | null;
      }[]
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This is a collection of automatically created search results. These results are used by the global site search and will be updated automatically as documents in the CMS are created or updated.
 *
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "search".
 */
export interface Search {
  id: number;
  title?: string | null;
  priority?: number | null;
  doc: {
    relationTo: 'posts';
    value: number | Post;
  };
  slug?: string | null;
  meta?: {
    title?: string | null;
    description?: string | null;
    image?: (number | null) | Media;
  };
  propertyTypes?:
    | {
        relationTo?: string | null;
        id?: string | null;
        title?: string | null;
      }[]
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-locked-documents".
 */
export interface PayloadLockedDocument {
  id: number;
  document?:
    | ({
        relationTo: 'pages';
        value: number | Page;
      } | null)
    | ({
        relationTo: 'posts';
        value: number | Post;
      } | null)
    | ({
        relationTo: 'media';
        value: number | Media;
      } | null)
    | ({
        relationTo: 'categories';
        value: number | Category;
      } | null)
    | ({
        relationTo: 'users';
        value: number | User;
      } | null)
    | ({
        relationTo: 'listings';
        value: number | Listing;
      } | null)
    | ({
        relationTo: 'attachments';
        value: number | Attachment;
      } | null)
    | ({
        relationTo: 'property-types';
        value: number | PropertyType;
      } | null)
    | ({
        relationTo: 'reviews';
        value: number | Review;
      } | null)
    | ({
        relationTo: 'team-members';
        value: number | TeamMember;
      } | null)
    | ({
        relationTo: 'job-listings';
        value: number | JobListing;
      } | null)
    | ({
        relationTo: 'redirects';
        value: number | Redirect;
      } | null)
    | ({
        relationTo: 'forms';
        value: number | Form;
      } | null)
    | ({
        relationTo: 'form-submissions';
        value: number | FormSubmission;
      } | null)
    | ({
        relationTo: 'search';
        value: number | Search;
      } | null);
  globalSlug?: string | null;
  user: {
    relationTo: 'users';
    value: number | User;
  };
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-preferences".
 */
export interface PayloadPreference {
  id: number;
  user: {
    relationTo: 'users';
    value: number | User;
  };
  key?: string | null;
  value?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-migrations".
 */
export interface PayloadMigration {
  id: number;
  name?: string | null;
  batch?: number | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "pages_select".
 */
export interface PagesSelect<T extends boolean = true> {
  title?: T;
  hero?:
    | T
    | {
        type?: T;
        enableOverrideTitle?: T;
        overrideTitle?: T;
        subtitle?: T;
        enableLinks?: T;
        links?:
          | T
          | {
              link?:
                | T
                | {
                    type?: T;
                    newTab?: T;
                    reference?: T;
                    url?: T;
                    label?: T;
                    appearance?: T;
                    backgroundColor?: T;
                    borderColor?: T;
                    textColor?: T;
                  };
              id?: T;
            };
        media?: T;
        heroLogos?:
          | T
          | {
              logo?: T;
              id?: T;
            };
        homeHeroLinks?:
          | T
          | {
              beforeLabelText?: T;
              link?:
                | T
                | {
                    type?: T;
                    newTab?: T;
                    reference?: T;
                    url?: T;
                    label?: T;
                    appearance?: T;
                    backgroundColor?: T;
                    borderColor?: T;
                    textColor?: T;
                  };
              id?: T;
            };
      };
  layout?:
    | T
    | {
        archiveBlock?: T | ArchiveBlockSelect<T>;
        formBlock?: T | FormBlockSelect<T>;
        columnsBlock?: T | ColumnsBlockSelect<T>;
        faqBlock?: T | FAQBlockSelect<T>;
        numberCountersBlock?: T | NumberCountersBlockSelect<T>;
        expertiseBlock?: T | ExpertiseBlockSelect<T>;
        timelineBlock?: T | TimelineBlockSelect<T>;
        reviewsBlock?: T | ReviewsBlockSelect<T>;
        jobListingsBlock?: T | JobListingsBlockSelect<T>;
        socialProofCarouselBlock?: T | SocialProofCarouselBlockSelect<T>;
        mediaCarouselBlock?: T | MediaCarouselBlockSelect<T>;
        cardGridBlock?: T | CardGridBlockSelect<T>;
        featuredListingsBlock?: T | FeaturedListingsBlockSelect<T>;
        searchBarBlock?: T | SearchBarBlockSelect<T>;
      };
  meta?:
    | T
    | {
        title?: T;
        image?: T;
        description?: T;
      };
  publishedAt?: T;
  url?: T;
  slug?: T;
  slugLock?: T;
  parent?: T;
  breadcrumbs?:
    | T
    | {
        doc?: T;
        url?: T;
        label?: T;
        id?: T;
      };
  updatedAt?: T;
  createdAt?: T;
  _status?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "ArchiveBlock_select".
 */
export interface ArchiveBlockSelect<T extends boolean = true> {
  heading?: T;
  subtitle?: T;
  headingAlign?: T;
  relationTo?: T;
  selectionType?: T;
  manualSelection?: T;
  enableCategoryBanner?: T;
  categories?: T;
  propertyTypes?: T;
  limit?: T;
  enablePropertyCategoryFilters?: T;
  defaultCategoryFilter?: T;
  layout?: T;
  buttonColor?: T;
  enablePostCategoryFilter?: T;
  enableExcerpt?: T;
  enableDate?: T;
  enableGutter?: T;
  elementId?: T;
  customCss?: T;
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "FormBlock_select".
 */
export interface FormBlockSelect<T extends boolean = true> {
  form?: T;
  enableIntro?: T;
  introContent?: T;
  styles?:
    | T
    | {
        global?:
          | T
          | {
              width?: T;
              theme?: T;
            };
        resp?:
          | T
          | {
              padHorDeskVal?: T;
              padHorDeskUnit?: T;
              padVertDeskVal?: T;
              padVertDeskUnit?: T;
              padHorTabVal?: T;
              padHorTabUnit?: T;
              padVertTabVal?: T;
              padVertTabUnit?: T;
              padHorMbVal?: T;
              padHorMbUnit?: T;
              padVertMbVal?: T;
              padVertMbUnit?: T;
            };
      };
  elementId?: T;
  customCss?: T;
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "ColumnsBlock_select".
 */
export interface ColumnsBlockSelect<T extends boolean = true> {
  columns?:
    | T
    | {
        type?: T;
        size?: T;
        backgroundColor?: T;
        backgroundImage?: T;
        enableSubtitle?: T;
        subtitle?: T;
        subtitleAlign?: T;
        subtitleColor?: T;
        richText?: T;
        enableLinks?: T;
        links?:
          | T
          | {
              link?:
                | T
                | {
                    type?: T;
                    newTab?: T;
                    reference?: T;
                    url?: T;
                    label?: T;
                    appearance?: T;
                    backgroundColor?: T;
                    borderColor?: T;
                    textColor?: T;
                  };
              id?: T;
            };
        media?: T;
        mediaBorderRadius?: T;
        styles?:
          | T
          | {
              enableTopBorder?: T;
              borderColor?: T;
            };
        id?: T;
      };
  styles?:
    | T
    | {
        global?:
          | T
          | {
              width?: T;
              backgroundColor?: T;
              enableDivider?: T;
              dividerColor?: T;
            };
        resp?:
          | T
          | {
              reverseWrap?: T;
            };
      };
  elementId?: T;
  customCss?: T;
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "FAQBlock_select".
 */
export interface FAQBlockSelect<T extends boolean = true> {
  enableHeading?: T;
  heading?: T;
  faqs?:
    | T
    | {
        question?: T;
        content?: T;
        id?: T;
      };
  size?: T;
  elementId?: T;
  customCss?: T;
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "NumberCountersBlock_select".
 */
export interface NumberCountersBlockSelect<T extends boolean = true> {
  numberCounters?:
    | T
    | {
        prefix?: T;
        number?: T;
        label?: T;
        suffix?: T;
        id?: T;
      };
  elementId?: T;
  customCss?: T;
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "ExpertiseBlock_select".
 */
export interface ExpertiseBlockSelect<T extends boolean = true> {
  heading?: T;
  description?: T;
  expertiseAreas?:
    | T
    | {
        title?: T;
        image?: T;
        borderColor?: T;
        link?:
          | T
          | {
              type?: T;
              newTab?: T;
              reference?: T;
              url?: T;
              label?: T;
              appearance?: T;
              backgroundColor?: T;
              borderColor?: T;
              textColor?: T;
            };
        id?: T;
      };
  elementId?: T;
  customCss?: T;
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "TimelineBlock_select".
 */
export interface TimelineBlockSelect<T extends boolean = true> {
  heading?: T;
  timelineItems?:
    | T
    | {
        tab?:
          | T
          | {
              icon?: T;
              title?: T;
            };
        content?:
          | T
          | {
              image?: T;
              richText?: T;
            };
        id?: T;
      };
  elementId?: T;
  customCss?: T;
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "ReviewsBlock_select".
 */
export interface ReviewsBlockSelect<T extends boolean = true> {
  heading?: T;
  subtitle?: T;
  reviews?:
    | T
    | {
        reviewerName?: T;
        reviewerTitle?: T;
        image?: T;
        review?: T;
        id?: T;
      };
  elementId?: T;
  customCss?: T;
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "JobListingsBlock_select".
 */
export interface JobListingsBlockSelect<T extends boolean = true> {
  heading?: T;
  subtitle?: T;
  elementId?: T;
  customCss?: T;
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "SocialProofCarouselBlock_select".
 */
export interface SocialProofCarouselBlockSelect<T extends boolean = true> {
  heading?: T;
  subtitle?: T;
  logos?:
    | T
    | {
        logo?: T;
        id?: T;
      };
  elementId?: T;
  customCss?: T;
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "MediaCarouselBlock_select".
 */
export interface MediaCarouselBlockSelect<T extends boolean = true> {
  enableAutoPlay?: T;
  carouselItems?:
    | T
    | {
        image?: T;
        id?: T;
      };
  elementId?: T;
  customCss?: T;
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "CardGridBlock_select".
 */
export interface CardGridBlockSelect<T extends boolean = true> {
  heading?: T;
  subtitle?: T;
  headingAlign?: T;
  cards?:
    | T
    | {
        icon?: T;
        content?: T;
        id?: T;
      };
  styles?:
    | T
    | {
        global?:
          | T
          | {
              backgroundColor?: T;
            };
        resp?: T | {};
      };
  elementId?: T;
  customCss?: T;
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "FeaturedListingsBlock_select".
 */
export interface FeaturedListingsBlockSelect<T extends boolean = true> {
  heading?: T;
  subtitle?: T;
  headingAlign?: T;
  categoryFilter?: T;
  enableLink?: T;
  link?:
    | T
    | {
        type?: T;
        newTab?: T;
        reference?: T;
        url?: T;
        label?: T;
      };
  elementId?: T;
  customCss?: T;
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "SearchBarBlock_select".
 */
export interface SearchBarBlockSelect<T extends boolean = true> {
  category?: T;
  elementId?: T;
  customCss?: T;
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "posts_select".
 */
export interface PostsSelect<T extends boolean = true> {
  title?: T;
  content?: T;
  featuredImage?: T;
  excerpt?: T;
  category?: T;
  meta?:
    | T
    | {
        title?: T;
        image?: T;
        description?: T;
      };
  publishedAt?: T;
  authors?: T;
  populatedAuthors?:
    | T
    | {
        id?: T;
        name?: T;
      };
  slug?: T;
  slugLock?: T;
  updatedAt?: T;
  createdAt?: T;
  _status?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "media_select".
 */
export interface MediaSelect<T extends boolean = true> {
  alt?: T;
  relatedListingFeaturedImage?: T;
  relatedListingImageGallery?: T;
  blurhash?: T;
  prefix?: T;
  updatedAt?: T;
  createdAt?: T;
  url?: T;
  thumbnailURL?: T;
  filename?: T;
  mimeType?: T;
  filesize?: T;
  width?: T;
  height?: T;
  focalX?: T;
  focalY?: T;
  sizes?:
    | T
    | {
        thumbnail?:
          | T
          | {
              url?: T;
              width?: T;
              height?: T;
              mimeType?: T;
              filesize?: T;
              filename?: T;
            };
        square?:
          | T
          | {
              url?: T;
              width?: T;
              height?: T;
              mimeType?: T;
              filesize?: T;
              filename?: T;
            };
        medium?:
          | T
          | {
              url?: T;
              width?: T;
              height?: T;
              mimeType?: T;
              filesize?: T;
              filename?: T;
            };
        xlarge?:
          | T
          | {
              url?: T;
              width?: T;
              height?: T;
              mimeType?: T;
              filesize?: T;
              filename?: T;
            };
      };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "categories_select".
 */
export interface CategoriesSelect<T extends boolean = true> {
  title?: T;
  parent?: T;
  breadcrumbs?:
    | T
    | {
        doc?: T;
        url?: T;
        label?: T;
        id?: T;
      };
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "users_select".
 */
export interface UsersSelect<T extends boolean = true> {
  name?: T;
  updatedAt?: T;
  createdAt?: T;
  email?: T;
  resetPasswordToken?: T;
  resetPasswordExpiration?: T;
  salt?: T;
  hash?: T;
  loginAttempts?: T;
  lockUntil?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "listings_select".
 */
export interface ListingsSelect<T extends boolean = true> {
  title?: T;
  featuredImage?: T;
  imageGallery?:
    | T
    | {
        image?: T;
        id?: T;
      };
  contactFormImage?: T;
  photosChangeTimestamp?: T;
  majorChangeTimestamp?: T;
  priceChangeTimestamp?: T;
  statusChangeTimestamp?: T;
  videosChangeTimestamp?: T;
  contractStatusChangeTimestamp?: T;
  documentsChangeTimestamp?: T;
  category?: T;
  bedrooms?: T;
  bathrooms?: T;
  description?: T;
  price?: T;
  textAfterPrice?: T;
  propertyType?: T;
  transactionType?: T;
  availability?: T;
  area?: T;
  acreage?: T;
  streetAddress?: T;
  city?: T;
  state?: T;
  zipCode?: T;
  coordinates?: T;
  attachments?:
    | T
    | {
        attachment?: T;
        id?: T;
      };
  videos?:
    | T
    | {
        url?: T;
        title?: T;
        id?: T;
      };
  isFeatured?: T;
  agents?: T;
  meta?:
    | T
    | {
        title?: T;
        image?: T;
        description?: T;
      };
  publishedAt?: T;
  slug?: T;
  slugLock?: T;
  MLS?:
    | T
    | {
        ListingKeyNumeric?: T;
        MlsStatus?: T;
        ListAgentKeyNumeric?: T;
        ListAgentFullName?: T;
        ListOfficeKeyNumeric?: T;
        ListOfficeName?: T;
        ModificationTimestamp?: T;
        PhotosChangeTimestamp?: T;
        PhotosCount?: T;
        PropertySubType?: T;
        FeaturedImageUrl?: T;
        ImageGalleryUrls?:
          | T
          | {
              url?: T;
              id?: T;
            };
      };
  updatedAt?: T;
  createdAt?: T;
  _status?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "attachments_select".
 */
export interface AttachmentsSelect<T extends boolean = true> {
  title?: T;
  relatedListings?: T;
  prefix?: T;
  updatedAt?: T;
  createdAt?: T;
  url?: T;
  thumbnailURL?: T;
  filename?: T;
  mimeType?: T;
  filesize?: T;
  width?: T;
  height?: T;
  focalX?: T;
  focalY?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "property-types_select".
 */
export interface PropertyTypesSelect<T extends boolean = true> {
  title?: T;
  relatedListings?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "reviews_select".
 */
export interface ReviewsSelect<T extends boolean = true> {
  name?: T;
  jobTitle?: T;
  review?: T;
  image?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "team-members_select".
 */
export interface TeamMembersSelect<T extends boolean = true> {
  title?: T;
  lastName?: T;
  details?:
    | T
    | {
        jobTitle?: T;
        bio?: T;
        featuredImage?: T;
        designations?: T;
        email?: T;
        phone?: T;
        socials?:
          | T
          | {
              platform?: T;
              url?: T;
              id?: T;
            };
        eductationAndCertifications?: T;
        notableTransactions?: T;
        testimonials?:
          | T
          | {
              name?: T;
              testimonial?: T;
              rating?: T;
              image?: T;
              id?: T;
            };
        isLeadership?: T;
        isRealtor?: T;
        company?: T;
        emailSignatureHeadshot?: T;
      };
  meta?:
    | T
    | {
        title?: T;
        image?: T;
        description?: T;
      };
  relatedListings?: T;
  slug?: T;
  slugLock?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "job-listings_select".
 */
export interface JobListingsSelect<T extends boolean = true> {
  title?: T;
  description?: T;
  updatedAt?: T;
  createdAt?: T;
  _status?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "redirects_select".
 */
export interface RedirectsSelect<T extends boolean = true> {
  from?: T;
  to?:
    | T
    | {
        type?: T;
        reference?: T;
        url?: T;
      };
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "forms_select".
 */
export interface FormsSelect<T extends boolean = true> {
  title?: T;
  fields?:
    | T
    | {
        checkbox?:
          | T
          | {
              name?: T;
              label?: T;
              width?: T;
              defaultValue?: T;
              required?: T;
              id?: T;
              blockName?: T;
            };
        country?:
          | T
          | {
              name?: T;
              label?: T;
              placeholder?: T;
              width?: T;
              required?: T;
              id?: T;
              blockName?: T;
            };
        email?:
          | T
          | {
              name?: T;
              label?: T;
              width?: T;
              placeholder?: T;
              required?: T;
              hidden?: T;
              id?: T;
              blockName?: T;
            };
        message?:
          | T
          | {
              message?: T;
              id?: T;
              blockName?: T;
            };
        number?:
          | T
          | {
              name?: T;
              label?: T;
              width?: T;
              defaultValue?: T;
              required?: T;
              id?: T;
              blockName?: T;
            };
        select?:
          | T
          | {
              name?: T;
              label?: T;
              width?: T;
              defaultValue?: T;
              placeholder?: T;
              options?:
                | T
                | {
                    label?: T;
                    value?: T;
                    id?: T;
                  };
              required?: T;
              id?: T;
              blockName?: T;
            };
        state?:
          | T
          | {
              name?: T;
              label?: T;
              placeholder?: T;
              width?: T;
              required?: T;
              id?: T;
              blockName?: T;
            };
        text?:
          | T
          | {
              name?: T;
              label?: T;
              width?: T;
              defaultValue?: T;
              placeholder?: T;
              required?: T;
              hidden?: T;
              id?: T;
              blockName?: T;
            };
        textarea?:
          | T
          | {
              name?: T;
              label?: T;
              width?: T;
              defaultValue?: T;
              placeholder?: T;
              required?: T;
              id?: T;
              blockName?: T;
            };
        phoneNumber?:
          | T
          | {
              name?: T;
              label?: T;
              width?: T;
              defaultValue?: T;
              placeholder?: T;
              required?: T;
              id?: T;
              blockName?: T;
            };
        pageTitle?:
          | T
          | {
              name?: T;
              title?: T;
              id?: T;
              blockName?: T;
            };
        teamMemberEmail?:
          | T
          | {
              name?: T;
              title?: T;
              id?: T;
              blockName?: T;
            };
      };
  submitButtonLabel?: T;
  confirmationType?: T;
  confirmationMessage?: T;
  redirect?:
    | T
    | {
        url?: T;
      };
  emails?:
    | T
    | {
        emailTo?: T;
        cc?: T;
        bcc?: T;
        replyTo?: T;
        emailFrom?: T;
        subject?: T;
        message?: T;
        id?: T;
      };
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "form-submissions_select".
 */
export interface FormSubmissionsSelect<T extends boolean = true> {
  form?: T;
  submissionData?:
    | T
    | {
        field?: T;
        value?: T;
        id?: T;
      };
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "search_select".
 */
export interface SearchSelect<T extends boolean = true> {
  title?: T;
  priority?: T;
  doc?: T;
  slug?: T;
  meta?:
    | T
    | {
        title?: T;
        description?: T;
        image?: T;
      };
  propertyTypes?:
    | T
    | {
        relationTo?: T;
        id?: T;
        title?: T;
      };
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-locked-documents_select".
 */
export interface PayloadLockedDocumentsSelect<T extends boolean = true> {
  document?: T;
  globalSlug?: T;
  user?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-preferences_select".
 */
export interface PayloadPreferencesSelect<T extends boolean = true> {
  user?: T;
  key?: T;
  value?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-migrations_select".
 */
export interface PayloadMigrationsSelect<T extends boolean = true> {
  name?: T;
  batch?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "header".
 */
export interface Header {
  id: number;
  logo?: (number | null) | Media;
  logoAlt?: (number | null) | Media;
  navItems?:
    | {
        navItem?: {
          /**
           * Where the nav item should be displayed on desktop
           */
          side?: ('left' | 'right') | null;
          type?: ('link' | 'parent') | null;
          link?: {
            type?: ('reference' | 'custom') | null;
            newTab?: boolean | null;
            reference?: {
              relationTo: 'pages';
              value: number | Page;
            } | null;
            url?: string | null;
            label: string;
          };
          label?: string | null;
          enableParentLink?: boolean | null;
          parentLink?: {
            type?: ('reference' | 'custom') | null;
            newTab?: boolean | null;
            reference?: {
              relationTo: 'pages';
              value: number | Page;
            } | null;
            url?: string | null;
            label: string;
          };
          /**
           * Label for the parent link in the mobile menu dropdown. (i.e. All, Overview, etc.)
           */
          parentLinkMobileLabel?: string | null;
          childrenLinks?:
            | {
                link: {
                  type?: ('reference' | 'custom') | null;
                  newTab?: boolean | null;
                  reference?: {
                    relationTo: 'pages';
                    value: number | Page;
                  } | null;
                  url?: string | null;
                  label: string;
                };
                id?: string | null;
              }[]
            | null;
        };
        id?: string | null;
      }[]
    | null;
  updatedAt?: string | null;
  createdAt?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "footer".
 */
export interface Footer {
  id: number;
  logo?: (number | null) | Media;
  navMenus?:
    | {
        title?: string | null;
        navItems?:
          | {
              link: {
                type?: ('reference' | 'custom') | null;
                newTab?: boolean | null;
                reference?: {
                  relationTo: 'pages';
                  value: number | Page;
                } | null;
                url?: string | null;
                label: string;
              };
              id?: string | null;
            }[]
          | null;
        id?: string | null;
      }[]
    | null;
  middleRow?: {
    logos?:
      | {
          logo?: (number | null) | Media;
          id?: string | null;
        }[]
      | null;
    brokerageServicesHeading?: string | null;
    brokerageServicesText?: {
      root: {
        type: string;
        children: {
          type: string;
          version: number;
          [k: string]: unknown;
        }[];
        direction: ('ltr' | 'rtl') | null;
        format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
        indent: number;
        version: number;
      };
      [k: string]: unknown;
    } | null;
    consumerProtectionHeading?: string | null;
    consumerProtectionText?: {
      root: {
        type: string;
        children: {
          type: string;
          version: number;
          [k: string]: unknown;
        }[];
        direction: ('ltr' | 'rtl') | null;
        format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
        indent: number;
        version: number;
      };
      [k: string]: unknown;
    } | null;
  };
  socials?:
    | {
        platform?: ('facebook' | 'instagram' | 'linkedin' | 'twitter' | 'youtube' | 'pinterest') | null;
        url?: string | null;
        id?: string | null;
      }[]
    | null;
  updatedAt?: string | null;
  createdAt?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "cookie-banner".
 */
export interface CookieBanner {
  id: number;
  content?: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  links?:
    | {
        link: {
          type?: ('reference' | 'custom') | null;
          newTab?: boolean | null;
          reference?: {
            relationTo: 'pages';
            value: number | Page;
          } | null;
          url?: string | null;
          label: string;
        };
        id?: string | null;
      }[]
    | null;
  updatedAt?: string | null;
  createdAt?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "header_select".
 */
export interface HeaderSelect<T extends boolean = true> {
  logo?: T;
  logoAlt?: T;
  navItems?:
    | T
    | {
        navItem?:
          | T
          | {
              side?: T;
              type?: T;
              link?:
                | T
                | {
                    type?: T;
                    newTab?: T;
                    reference?: T;
                    url?: T;
                    label?: T;
                  };
              label?: T;
              enableParentLink?: T;
              parentLink?:
                | T
                | {
                    type?: T;
                    newTab?: T;
                    reference?: T;
                    url?: T;
                    label?: T;
                  };
              parentLinkMobileLabel?: T;
              childrenLinks?:
                | T
                | {
                    link?:
                      | T
                      | {
                          type?: T;
                          newTab?: T;
                          reference?: T;
                          url?: T;
                          label?: T;
                        };
                    id?: T;
                  };
            };
        id?: T;
      };
  updatedAt?: T;
  createdAt?: T;
  globalType?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "footer_select".
 */
export interface FooterSelect<T extends boolean = true> {
  logo?: T;
  navMenus?:
    | T
    | {
        title?: T;
        navItems?:
          | T
          | {
              link?:
                | T
                | {
                    type?: T;
                    newTab?: T;
                    reference?: T;
                    url?: T;
                    label?: T;
                  };
              id?: T;
            };
        id?: T;
      };
  middleRow?:
    | T
    | {
        logos?:
          | T
          | {
              logo?: T;
              id?: T;
            };
        brokerageServicesHeading?: T;
        brokerageServicesText?: T;
        consumerProtectionHeading?: T;
        consumerProtectionText?: T;
      };
  socials?:
    | T
    | {
        platform?: T;
        url?: T;
        id?: T;
      };
  updatedAt?: T;
  createdAt?: T;
  globalType?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "cookie-banner_select".
 */
export interface CookieBannerSelect<T extends boolean = true> {
  content?: T;
  links?:
    | T
    | {
        link?:
          | T
          | {
              type?: T;
              newTab?: T;
              reference?: T;
              url?: T;
              label?: T;
            };
        id?: T;
      };
  updatedAt?: T;
  createdAt?: T;
  globalType?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "carouselLexicalBlock".
 */
export interface CarouselLexicalBlock {
  items?:
    | {
        icon?: (number | null) | Media;
        heading?: string | null;
        content?: string | null;
        id?: string | null;
      }[]
    | null;
  id?: string | null;
  blockName?: string | null;
  blockType: 'carousel';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "checkmarkListLexicalBlock".
 */
export interface CheckmarkListLexicalBlock {
  items?:
    | {
        iconColor?: string | null;
        text?: string | null;
        textColor?: string | null;
        id?: string | null;
      }[]
    | null;
  id?: string | null;
  blockName?: string | null;
  blockType: 'checkmarkList';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "spacerLexicalBlock".
 */
export interface SpacerLexicalBlock {
  size?: ('small' | 'medium' | 'large') | null;
  id?: string | null;
  blockName?: string | null;
  blockType: 'spacer';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "mediaGridBlock".
 */
export interface MediaGridBlock {
  items?:
    | {
        media?: (number | null) | Media;
        aspectRatio?: ('auto' | 'video' | 'square') | null;
        id?: string | null;
      }[]
    | null;
  /**
   * The HTML ID attribute of this block.
   */
  elementId?: string | null;
  /**
   * Omit the opening and closing <style> tags
   */
  customCss?: string | null;
  id?: string | null;
  blockName?: string | null;
  blockType: 'mediaGrid';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "subtitleLexicalBlock".
 */
export interface SubtitleLexicalBlock {
  subtitle?: string | null;
  textColor?: string | null;
  id?: string | null;
  blockName?: string | null;
  blockType: 'subtitle';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "linkGroupLexicalBlock".
 */
export interface LinkGroupLexicalBlock {
  links?:
    | {
        link: {
          type?: ('reference' | 'custom') | null;
          newTab?: boolean | null;
          reference?: {
            relationTo: 'pages';
            value: number | Page;
          } | null;
          url?: string | null;
          label: string;
          /**
           * Choose how the link should be rendered.
           */
          appearance?: ('default' | 'outline') | null;
          backgroundColor?: string | null;
          borderColor?: string | null;
          textColor?: string | null;
        };
        id?: string | null;
      }[]
    | null;
  id?: string | null;
  blockName?: string | null;
  blockType: 'linkGroup';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "auth".
 */
export interface Auth {
  [k: string]: unknown;
}


declare module 'payload' {
  export interface GeneratedTypes extends Config {}
}